Description: Creates a Kinesis Firehose to Redshift.

Parameters:

  EnvironmentName:
    Description: The name of the target environment.
    Type: String
    AllowedValues: [dev, qa, prod]

  VerticalName:
    Description: >
      The name of the vertical that owns the firehose. The vertical name is required
      to be lowercase as it is used in the naming convention of resources created by
      this template and by resources on which this template depends.
    Type: String
    AllowedPattern: "[a-z]+"
    Default: ltk

  DeliveryStreamName:
    Description: The name of the delivery stream.
    Type: String

  S3BucketName:
    Description: The name of the intermediate S3 bucket where data is written before being copied to Redshift.
    Type: String

  S3Prefix:
    Description: The prefix to append to the intermediate S3 files created by the firehose.
    Type: String

  S3CompressionFormat:
    Description: The compression format for the intermediate S3 files.
    Type: String
    AllowedValues: [UNCOMPRESSED, GZIP]
    Default: UNCOMPRESSED

  RedshiftJDBCURL:
    Description: The Redshift JDBC URL.
    Type: String

  RedshiftUsername:
    Description: The Redshift username.
    Type: String

  RedshiftPassword:
    Description: The Redshift password.
    Type: String
    NoEcho: true

  RedshiftTableName:
    Description: The name of the table in Redshift where the firehose copies the data from S3.
    Type: String

  RedshiftColumns:
    Description: A comma-separated list of the column names in the table that the firehose copies data to.
    Type: String
    Default: ""

  RedshiftCopyOptions:
    Description: >
      Parameters to use with the Redshift COPY command.
      See http://docs.aws.amazon.com/firehose/latest/APIReference/API_CopyCommand.html for examples.
    Type: String
    Default: ""

  BufferingIntervalInSeconds:
    Description: The number of seconds to wait before copying data from S3 to Redshift.
    Type: Number
    Default: 300

  BufferingSizeInMBs:
    Description: The number of MBs to accumulate in S3 before copying data from S3 to Redshift.
    Type: Number
    Default: 10

Resources:

  DeliveryStream:
    Type: AWS::KinesisFirehose::DeliveryStream
    Properties:
      DeliveryStreamName: !Sub ${EnvironmentName}-${DeliveryStreamName}
      DeliveryStreamType: DirectPut
      RedshiftDestinationConfiguration:
        ClusterJDBCURL: !Ref RedshiftJDBCURL
        Username: !Ref RedshiftUsername
        Password: !Ref RedshiftPassword
        RoleARN: !GetAtt DeliveryRole.Arn
        S3Configuration:
          BucketARN: !Sub arn:aws:s3:::${S3BucketName}
          Prefix: !Ref S3Prefix
          CompressionFormat: !Ref S3CompressionFormat
          RoleARN: !GetAtt DeliveryRole.Arn
          BufferingHints:
            IntervalInSeconds: !Ref BufferingIntervalInSeconds
            SizeInMBs: !Ref BufferingSizeInMBs
          CloudWatchLoggingOptions:
            Enabled: true
            LogGroupName: !Ref LogGroup
            LogStreamName: !Ref S3DeliveryLogStream
        CopyCommand:
          DataTableName: !Ref RedshiftTableName
          DataTableColumns: !Ref RedshiftColumns
          CopyOptions: !Ref RedshiftCopyOptions
        CloudWatchLoggingOptions:
          Enabled: true
          LogGroupName: !Ref LogGroup
          LogStreamName: !Ref RedshiftDeliveryLogStream

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub ${EnvironmentName}-${DeliveryStreamName}-firehose
      RetentionInDays: 30

  S3DeliveryLogStream:
    Type: AWS::Logs::LogStream
    Properties:
      LogStreamName: s3-delivery
      LogGroupName: !Ref LogGroup

  RedshiftDeliveryLogStream:
    Type: AWS::Logs::LogStream
    Properties:
      LogStreamName: redshift-delivery
      LogGroupName: !Ref LogGroup

  DeliveryRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${EnvironmentName}-${DeliveryStreamName}-firehose
      Path: /
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service: firehose.amazonaws.com
            Condition:
              StringEquals:
                sts:ExternalId: !Ref AWS::AccountId

  S3AccessPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: s3-access
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action:
              - s3:ListBucket
              - s3:GetBucketLocation
              - s3:GetObject
              - s3:PutObject
              - s3:ListBucketMultipartUploads
              - s3:AbortMultipartUpload
            Resource:
              - !Sub arn:aws:s3:::${S3BucketName}
              - !Sub arn:aws:s3:::${S3BucketName}/*
      Roles:
        - !Ref DeliveryRole

  CloudWatchLogsAccessPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: cloudwatch-logs-access
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action: logs:PutLogEvents
            Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:${LogGroup}:log-stream:*
      Roles:
        - !Ref DeliveryRole

Outputs:

  DeliveryStreamName:
    Description: The name of the firehose delivery stream.
    Value: !Ref DeliveryStream

  DeliveryStreamARN:
    Description: The ARN of the firehost delivery stream.
    Value: !GetAtt DeliveryStream.Arn

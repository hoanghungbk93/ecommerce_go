Description: "DEPRECATED: Creates a Redis cluster with cluster (sharded) mode disabled."

# This template has been deprecated in favor of the file "v2/redis.yml" in the same directory.
#
# When adding support for monitoring memory, the following was discovered:
#    https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/redis-memory-management.html
#
# AWS has an issue with the cache services, depending on how old the account is and if you do not create a parameter group,
# the redis instance can have an unrecommended amount of reserved memory ( the default is zero )
#
# You want to reserve enough memory to allow for the redis instance to backup the current database from ram to disk, to
# properly support failover during maintenance windows, and when AWS has transient internal networking issues.
#
# Resolving this requires we add a parameter group as best-practice and start configuring best practice values for
# memory reservation per redis version AWS continues to support. Incorrectly configuring your parameter group can seriously
# impact your infrastructure's ability to scale and remain stable during updates. For these reasons it appears to be best
# for us to deprecate this template rather than continue to support it as "best-practice" since there is too much risk
# in letting AWS migrate when the cluster is misconfigured ( in the cases where the data is required for critical functionality )
#
# Upgrading to a properly configured parameter group in place can lead to an outage as available memory for data storage will
# be reduced.

# For continued reading on how REDIS manages memory, see: https://redis.io/topics/lru-cache
# For more information on which configuration options AWS supports, see: https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/ParameterGroups.Redis.html#ParameterGroups.Redis.NodeSpecific

Parameters:

  EnvironmentName:
    Description: The name of the target environment.
    Type: String
    AllowedValues: [dev, qa, staging, prod]

  VerticalName:
    Description: >
      The name of the vertical that owns the cluster. The vertical name is required
      to be lowercase as it is used in the naming convention of resources created by
      this template and by resources on which this template depends.
    Type: String
    AllowedPattern: "[a-z]+"
    Default: ltk

  ClusterName:
    Description: The name of the cluster.
    Type: String

  ClusterDescription:
    Description: The description of the cluster.
    Type: String

  EngineVersion:
    Description: The version of the Redis engine to use.
    Type: String
    Default: 3.2

  NodeType:
    Description: The compute and memory capacity of the nodes in the cluster.
    Type: String

  NumNodes:
    Type: Number
    Description: The number of nodes in the cluster (1 primary, multiple read replicas).
    MinValue: 1
    Default: 1
    MaxValue: 2
    AllowedValues: [1,2]

  AutomaticFailoverEnabled:
    Type: String
    Description: Whether or not to enable automatic failover (requires NumNodes > 1, EngineVersion >= 2.8.6, and NodeType > T2).
    AllowedValues: [true, false]
    Default: false

  AutoMinorVersionUpgrade:
    Description: Whether or not minor engine upgrades can be applied automatically to the nodes in the cluster.
    Type: String
    AllowedValues: [true, false]
    Default: true

  SnapshotName:
    Description: The name of a snapshot from which to restore data into the cluster.
    Type: String
    Default: ""

  CPUHighThreshold:
    Description: >
      The threshold at which the redis cluster's EngineCPUUtilization triggers an alarm (percent).
      If 0, no alarm is created.
    Type: Number
    Default: 90
    MinValue: 0
    MaxValue: 100

  CPUHighPeriod:
    Description: The number of seconds over which the CacheCluster's CPU is sampled.
    Type: Number
    Default: 300

  CPUHighEvaluationPeriods:
    Description: The number of periods over which data is compared to the specified high CPU threshold.
    Type: Number
    Default: 1

  EvictionsHighThreshold:
    Description: >
      The threshold at which the cluster's eviction count should raise an alarm
      If 0, no alarm is created.
    Type: Number
    Default: 1

  EvictionsHighPeriod:
    Description: The number of seconds over which the cluster's eviction count is sampled.
    Type: Number
    Default: 300

  EvictionsHighEvaluationPeriods:
    Description: The number of periods over which data is compared to the specified high eviction count threshold.
    Type: Number
    Default: 1

  # As of 2019-06-25 the default connection limit is 65000
  # Ref: https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/ParameterGroups.Redis.html

  ConnectionsHighThreshold:
    Description: >
      The threshold at which the cluster's connection count should raise an alarm
      As of 2019-06-25 the default connection limit is 65000.
      If 0, no alarm is created.
    Type: Number
    Default: 32500

  ConnectionsHighPeriod:
    Description: The number of seconds over which the cluster's connection count is sampled.
    Type: Number
    Default: 300

  ConnectionsHighEvaluationPeriods:
    Description: The number of periods over which data is compared to the specified high connection count threshold.
    Type: Number
    Default: 1

  NewConnectionsHighThreshold:
    Description: |
      The threshold at which the cluster's new-connection count should raise an alarm
      If 0, no alarm is created.
    Type: Number
    Default: 10000

  NewConnectionsHighPeriod:
    Description: The number of seconds over which the cluster's new-connection count is sampled.
    Type: Number
    Default: 300

  NewConnectionsHighEvaluationPeriods:
    Description: The number of periods over which data is compared to the specified high new-connection count threshold.
    Type: Number
    Default: 1

  MemoryUsageHighThreshold:
    Description: |
      The threshold at which the cluster's used memory should raise an alarm
      If 0, no alarm is created.
    Type: Number
    Default: 80

  MemoryUsageHighPeriod:
    Description: The number of seconds over which the cluster's memory usage is sampled.
    Type: Number
    Default: 300

  MemoryUsageHighEvaluationPeriods:
    Description: The number of periods over which data is compared to the specified high memory usage threshold.
    Type: Number
    Default: 1

Mappings:

  # last updated 2019-06-26 from https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/ParameterGroups.Redis.html#ParameterGroups.Redis.NodeSpecific

  NodeTypes:
    cache.t1.micro:
      MaxMemoryBytes: 142606336
    cache.t2.micro:
      MaxMemoryBytes: 581959680
    cache.t2.small:
      MaxMemoryBytes: 1665138688
    cache.t2.medium:
      MaxMemoryBytes: 3461349376
    cache.m1.small:
      MaxMemoryBytes: 943718400
    cache.m1.medium:
      MaxMemoryBytes: 3093299200
    cache.m1.large:
      MaxMemoryBytes: 7025459200
    cache.m1.xlarge:
      MaxMemoryBytes: 14889779200
    cache.m2.xlarge:
      MaxMemoryBytes: 17091788800
    cache.m2.2xlarge:
      MaxMemoryBytes: 35022438400
    cache.m2.4xlarge:
      MaxMemoryBytes: 70883737600
    cache.m3.medium:
      MaxMemoryBytes: 2988441600
    cache.m3.large:
      MaxMemoryBytes: 6501171200
    cache.m3.xlarge:
      MaxMemoryBytes: 14260633600
    cache.m3.2xlarge:
      MaxMemoryBytes: 29989273600
    cache.m4.large:
      MaxMemoryBytes: 6892593152
    cache.m4.xlarge:
      MaxMemoryBytes: 15328501760
    cache.m4.2xlarge:
      MaxMemoryBytes: 31889126359
    cache.m4.4xlarge:
      MaxMemoryBytes: 65257290629
    cache.m4.10xlarge:
      MaxMemoryBytes: 166047614239
    cache.m5.large:
      MaxMemoryBytes: 6854542746
    cache.m5.xlarge:
      MaxMemoryBytes: 13891921715
    cache.m5.2xlarge:
      MaxMemoryBytes: 27966669210
    cache.m5.4xlarge:
      MaxMemoryBytes: 56116178125
    cache.m5.12xlarge:
      MaxMemoryBytes: 168715971994
    cache.m5.24xlarge:
      MaxMemoryBytes: 337500562842
    cache.c1.xlarge:
      MaxMemoryBytes: 6501171200
    cache.r3.large:
      MaxMemoryBytes: 14470348800
    cache.r3.xlarge:
      MaxMemoryBytes: 30513561600
    cache.r3.2xlarge:
      MaxMemoryBytes: 62495129600
    cache.r3.4xlarge:
      MaxMemoryBytes: 126458265600
    cache.r3.8xlarge:
      MaxMemoryBytes: 254384537600
    cache.r4.large:
      MaxMemoryBytes: 13201781556
    cache.r4.xlarge:
      MaxMemoryBytes: 26898228839
    cache.r4.2xlarge:
      MaxMemoryBytes: 54197537997
    cache.r4.4xlarge:
      MaxMemoryBytes: 108858546586
    cache.r4.8xlarge:
      MaxMemoryBytes: 218255432090
    cache.r4.16xlarge:
      MaxMemoryBytes: 437021573120
    cache.r5.large:
      MaxMemoryBytes: 14037181030
    cache.r5.xlarge:
      MaxMemoryBytes: 28261849702
    cache.r5.2xlarge:
      MaxMemoryBytes: 56711183565
    cache.r5.4xlarge:
      MaxMemoryBytes: 113609865216
    cache.r5.12xlarge:
      MaxMemoryBytes: 341206346547
    cache.r5.24xlarge:
      MaxMemoryBytes: 682485973811

Conditions:

  RestoreFromBackup: !Not [!Equals [!Ref SnapshotName, ""]]
  EnvIsProd: !Equals [!Ref EnvironmentName, prod]

  HasCPUHighAlarm001: !Not [!Equals [!Ref CPUHighThreshold, 0]]
  HasEvictionsHighAlarm001: !Not [!Equals [!Ref EvictionsHighThreshold, 0]]
  HasConnectionsHighAlarm001: !Not [!Equals [!Ref ConnectionsHighThreshold, 0]]
  HasNewConnectionsHighAlarm001: !Not [!Equals [!Ref NewConnectionsHighThreshold, 0]]
  HasMemoryUsageHighAlarm001: !Not [!Equals [!Ref MemoryUsageHighThreshold, 0]]

  HasSecondNode: !Equals [!Ref NumNodes, 2]

  HasCPUHighAlarm002: !And [!Condition HasSecondNode, !Condition HasCPUHighAlarm001]
  HasEvictionsHighAlarm002: !And [!Condition HasSecondNode, !Condition HasEvictionsHighAlarm001]
  HasConnectionsHighAlarm002: !And [!Condition HasSecondNode, !Condition HasConnectionsHighAlarm001]
  HasNewConnectionsHighAlarm002: !And [!Condition HasSecondNode, !Condition HasNewConnectionsHighAlarm001]
  HasMemoryUsageHighAlarm002: !And [!Condition HasSecondNode, !Condition HasMemoryUsageHighAlarm001]

Resources:

  SubnetGroup:
    Type: AWS::ElastiCache::SubnetGroup
    Properties:
      CacheSubnetGroupName: !Sub ${EnvironmentName}-${ClusterName}
      Description: !Sub Subnet group for the ${EnvironmentName}-${ClusterName} Redis cluster.
      SubnetIds: !Split
        - ","
        - Fn::ImportValue: !Sub ${EnvironmentName}:stacksets:v2:env:vpc:private-subnets

  ReplicationGroup:
    Type: AWS::ElastiCache::ReplicationGroup
    Properties:
      ReplicationGroupId: !Sub ${EnvironmentName}-${ClusterName}
      ReplicationGroupDescription: !Ref ClusterDescription
      Engine: redis
      EngineVersion: !Ref EngineVersion
      CacheNodeType: !Ref NodeType
      NumCacheClusters: !Ref NumNodes
      AutomaticFailoverEnabled: !Ref AutomaticFailoverEnabled
      AutoMinorVersionUpgrade: !Ref AutoMinorVersionUpgrade
      CacheSubnetGroupName: !Ref SubnetGroup
      SecurityGroupIds:
        - Fn::ImportValue: !Sub ${EnvironmentName}:stacksets:v2:env:vpc:default-security-group
      SnapshotName: !If [RestoreFromBackup, !Ref SnapshotName, !Ref "AWS::NoValue"]
      Tags:
        - Key: Vertical
          Value: !Ref VerticalName
        - Key: Environment
          Value: !Ref EnvironmentName

  HostParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name: !Sub /${EnvironmentName}/redis/${ClusterName}/host
      Description: !Sub Automated by CloudFormation (${AWS::StackName})
      Value: !GetAtt ReplicationGroup.PrimaryEndPoint.Address

  PortParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name: !Sub /${EnvironmentName}/redis/${ClusterName}/port
      Description: !Sub Automated by CloudFormation (${AWS::StackName})
      Value: !GetAtt ReplicationGroup.PrimaryEndPoint.Port

  CPUHighAlarm001:
    Type: AWS::CloudWatch::Alarm
    Condition: HasCPUHighAlarm001
    Properties:
      AlarmName: !Sub ${EnvironmentName}-${ClusterName}-redis-001-high-cpu
      AlarmDescription: !Sub Notify when the ${EnvironmentName}-${ClusterName} Redis cluster CPU is high.
      Namespace: AWS/ElastiCache
      MetricName: EngineCPUUtilization
      Unit: Percent
      Statistic: Average
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Threshold: !Ref CPUHighThreshold
      Period: !Ref CPUHighPeriod
      EvaluationPeriods: !Ref CPUHighEvaluationPeriods
      ActionsEnabled: true
      AlarmActions:
        - !Sub
          - arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${EnvironmentName}-${VerticalName}-${Urgency}-urgency-alerts
          - Urgency: !If [EnvIsProd, critical, low]
      OKActions:
        - !Sub
          - arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${EnvironmentName}-${VerticalName}-${Urgency}-urgency-alerts
          - Urgency: !If [EnvIsProd, critical, low]
      Dimensions:
        - Name: CacheClusterId
          Value: !Sub ${ReplicationGroup}-001

  EvictionsHighAlarm001:
    Type: AWS::CloudWatch::Alarm
    Condition: HasEvictionsHighAlarm001
    Properties:
      AlarmName: !Sub ${EnvironmentName}-${ClusterName}-redis-001-high-evictions
      AlarmDescription: !Sub Notify when the ${EnvironmentName}-${ClusterName} Redis cluster evictions are high.
      Namespace: AWS/ElastiCache
      MetricName: Evictions
      Unit: Count
      Statistic: Sum
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Threshold: !Ref EvictionsHighThreshold
      Period: !Ref EvictionsHighPeriod
      EvaluationPeriods: !Ref EvictionsHighEvaluationPeriods
      ActionsEnabled: true
      AlarmActions:
        - !Sub
          - arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${EnvironmentName}-${VerticalName}-${Urgency}-urgency-alerts
          - Urgency: !If [EnvIsProd, critical, low]
      OKActions:
        - !Sub
          - arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${EnvironmentName}-${VerticalName}-${Urgency}-urgency-alerts
          - Urgency: !If [EnvIsProd, critical, low]
      Dimensions:
        - Name: CacheClusterId
          Value: !Sub ${ReplicationGroup}-001

  ConnectionsHighAlarm001:
    Type: AWS::CloudWatch::Alarm
    Condition: HasConnectionsHighAlarm001
    Properties:
      AlarmName: !Sub ${EnvironmentName}-${ClusterName}-redis-001-high-connections
      AlarmDescription: !Sub Notify when the ${EnvironmentName}-${ClusterName} Redis cluster connections are high.
      Namespace: AWS/ElastiCache
      MetricName: CurrConnections
      Unit: Count
      Statistic: Average
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Threshold: !Ref ConnectionsHighThreshold
      Period: !Ref ConnectionsHighPeriod
      EvaluationPeriods: !Ref ConnectionsHighEvaluationPeriods
      ActionsEnabled: true
      AlarmActions:
        - !Sub
          - arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${EnvironmentName}-${VerticalName}-${Urgency}-urgency-alerts
          - Urgency: !If [EnvIsProd, critical, low]
      OKActions:
        - !Sub
          - arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${EnvironmentName}-${VerticalName}-${Urgency}-urgency-alerts
          - Urgency: !If [EnvIsProd, critical, low]
      Dimensions:
        - Name: CacheClusterId
          Value: !Sub ${ReplicationGroup}-001

  NewConnectionsHighAlarm001:
    Type: AWS::CloudWatch::Alarm
    Condition: HasNewConnectionsHighAlarm001
    Properties:
      AlarmName: !Sub ${EnvironmentName}-${ClusterName}-redis-001-high-new-connections
      AlarmDescription: !Sub Notify when the ${EnvironmentName}-${ClusterName} Redis cluster new connections are high.
      Namespace: AWS/ElastiCache
      MetricName: NewConnections
      Unit: Count
      Statistic: Average
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Threshold: !Ref NewConnectionsHighThreshold
      Period: !Ref NewConnectionsHighPeriod
      EvaluationPeriods: !Ref NewConnectionsHighEvaluationPeriods
      ActionsEnabled: true
      AlarmActions:
        - !Sub
          - arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${EnvironmentName}-${VerticalName}-${Urgency}-urgency-alerts
          - Urgency: !If [EnvIsProd, critical, low]
      OKActions:
        - !Sub
          - arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${EnvironmentName}-${VerticalName}-${Urgency}-urgency-alerts
          - Urgency: !If [EnvIsProd, critical, low]
      Dimensions:
        - Name: CacheClusterId
          Value: !Sub ${ReplicationGroup}-001

  MemoryUsageHighAlarm001:
    Type: AWS::CloudWatch::Alarm
    Condition: HasMemoryUsageHighAlarm001
    Properties:
      AlarmName: !Sub ${EnvironmentName}-${ClusterName}-redis-001-high-memory
      AlarmDescription: !Sub Notify when the ${EnvironmentName}-${ClusterName} Redis cluster memory usage is high.
      Metrics:
        - Id: e1
          Label: percentMemoryUsed
          Expression: !Sub
            - "100*m1/${MaxMemoryBytes}" # 1/4 of memory should be reserved for backup and failover operations, but the user must migrate to v2 template to get that behavior
            - MaxMemoryBytes: !FindInMap [NodeTypes, !Ref NodeType, MaxMemoryBytes]
          ReturnData: true
        - Id: m1
          MetricStat:
            Metric:
              MetricName: BytesUsedForCache
              Namespace: AWS/ElastiCache
              Dimensions:
                - Name: CacheClusterId
                  Value: !Sub ${ReplicationGroup}-001
            Period: !Ref MemoryUsageHighPeriod
            Stat: Average
          ReturnData: false
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Threshold: !Ref MemoryUsageHighThreshold
      EvaluationPeriods: !Ref MemoryUsageHighEvaluationPeriods
      ActionsEnabled: true
      AlarmActions:
        - !Sub
          - arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${EnvironmentName}-${VerticalName}-${Urgency}-urgency-alerts
          - Urgency: !If [EnvIsProd, critical, low]
      OKActions:
        - !Sub
          - arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${EnvironmentName}-${VerticalName}-${Urgency}-urgency-alerts
          - Urgency: !If [EnvIsProd, critical, low]

  CPUHighAlarm002:
    Type: AWS::CloudWatch::Alarm
    Condition: HasCPUHighAlarm002
    Properties:
      AlarmName: !Sub ${EnvironmentName}-${ClusterName}-redis-002-high-cpu
      AlarmDescription: !Sub Notify when the ${EnvironmentName}-${ClusterName} Redis cluster CPU is high.
      Namespace: AWS/ElastiCache
      MetricName: EngineCPUUtilization
      Unit: Percent
      Statistic: Average
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Threshold: !Ref CPUHighThreshold
      Period: !Ref CPUHighPeriod
      EvaluationPeriods: !Ref CPUHighEvaluationPeriods
      ActionsEnabled: true
      AlarmActions:
        - !Sub
          - arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${EnvironmentName}-${VerticalName}-${Urgency}-urgency-alerts
          - Urgency: !If [EnvIsProd, critical, low]
      OKActions:
        - !Sub
          - arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${EnvironmentName}-${VerticalName}-${Urgency}-urgency-alerts
          - Urgency: !If [EnvIsProd, critical, low]
      Dimensions:
        - Name: CacheClusterId
          Value: !Sub ${ReplicationGroup}-002

  EvictionsHighAlarm002:
    Type: AWS::CloudWatch::Alarm
    Condition: HasEvictionsHighAlarm002
    Properties:
      AlarmName: !Sub ${EnvironmentName}-${ClusterName}-redis-002-high-evictions
      AlarmDescription: !Sub Notify when the ${EnvironmentName}-${ClusterName} Redis cluster evictions are high.
      Namespace: AWS/ElastiCache
      MetricName: Evictions
      Unit: Count
      Statistic: Sum
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Threshold: !Ref EvictionsHighThreshold
      Period: !Ref EvictionsHighPeriod
      EvaluationPeriods: !Ref EvictionsHighEvaluationPeriods
      ActionsEnabled: true
      AlarmActions:
        - !Sub
          - arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${EnvironmentName}-${VerticalName}-${Urgency}-urgency-alerts
          - Urgency: !If [EnvIsProd, critical, low]
      OKActions:
        - !Sub
          - arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${EnvironmentName}-${VerticalName}-${Urgency}-urgency-alerts
          - Urgency: !If [EnvIsProd, critical, low]
      Dimensions:
        - Name: CacheClusterId
          Value: !Sub ${ReplicationGroup}-002

  ConnectionsHighAlarm002:
    Type: AWS::CloudWatch::Alarm
    Condition: HasConnectionsHighAlarm002
    Properties:
      AlarmName: !Sub ${EnvironmentName}-${ClusterName}-redis-002-high-connections
      AlarmDescription: !Sub Notify when the ${EnvironmentName}-${ClusterName} Redis cluster connections are high.
      Namespace: AWS/ElastiCache
      MetricName: CurrConnections
      Unit: Count
      Statistic: Average
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Threshold: !Ref ConnectionsHighThreshold
      Period: !Ref ConnectionsHighPeriod
      EvaluationPeriods: !Ref ConnectionsHighEvaluationPeriods
      ActionsEnabled: true
      AlarmActions:
        - !Sub
          - arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${EnvironmentName}-${VerticalName}-${Urgency}-urgency-alerts
          - Urgency: !If [EnvIsProd, critical, low]
      OKActions:
        - !Sub
          - arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${EnvironmentName}-${VerticalName}-${Urgency}-urgency-alerts
          - Urgency: !If [EnvIsProd, critical, low]
      Dimensions:
        - Name: CacheClusterId
          Value: !Sub ${ReplicationGroup}-002

  NewConnectionsHighAlarm002:
    Type: AWS::CloudWatch::Alarm
    Condition: HasNewConnectionsHighAlarm002
    Properties:
      AlarmName: !Sub ${EnvironmentName}-${ClusterName}-redis-002-high-new-connections
      AlarmDescription: !Sub Notify when the ${EnvironmentName}-${ClusterName} Redis cluster new connections are high.
      Namespace: AWS/ElastiCache
      MetricName: NewConnections
      Unit: Count
      Statistic: Average
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Threshold: !Ref NewConnectionsHighThreshold
      Period: !Ref NewConnectionsHighPeriod
      EvaluationPeriods: !Ref NewConnectionsHighEvaluationPeriods
      ActionsEnabled: true
      AlarmActions:
        - !Sub
          - arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${EnvironmentName}-${VerticalName}-${Urgency}-urgency-alerts
          - Urgency: !If [EnvIsProd, critical, low]
      OKActions:
        - !Sub
          - arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${EnvironmentName}-${VerticalName}-${Urgency}-urgency-alerts
          - Urgency: !If [EnvIsProd, critical, low]
      Dimensions:
        - Name: CacheClusterId
          Value: !Sub ${ReplicationGroup}-002

  MemoryUsageHighAlarm002:
    Type: AWS::CloudWatch::Alarm
    Condition: HasMemoryUsageHighAlarm002
    Properties:
      AlarmName: !Sub ${EnvironmentName}-${ClusterName}-redis-002-high-memory
      AlarmDescription: !Sub Notify when the ${EnvironmentName}-${ClusterName} Redis cluster memory usage is high.
      Metrics:
        - Id: e1
          Label: percentMemoryUsed
          Expression: !Sub
            - "100*m1/${MaxMemoryBytes}" # 1/4 of memory should be reserved for backup and failover operations, but the user must migrate to v2 template to get that behavior
            - MaxMemoryBytes: !FindInMap [NodeTypes, !Ref NodeType, MaxMemoryBytes]
          ReturnData: true
        - Id: m1
          MetricStat:
            Metric:
              MetricName: BytesUsedForCache
              Namespace: AWS/ElastiCache
              Dimensions:
                - Name: CacheClusterId
                  Value: !Sub ${ReplicationGroup}-002
            Period: !Ref MemoryUsageHighPeriod
            Stat: Average
          ReturnData: false
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Threshold: !Ref MemoryUsageHighThreshold
      EvaluationPeriods: !Ref MemoryUsageHighEvaluationPeriods
      ActionsEnabled: true
      AlarmActions:
        - !Sub
          - arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${EnvironmentName}-${VerticalName}-${Urgency}-urgency-alerts
          - Urgency: !If [EnvIsProd, critical, low]
      OKActions:
        - !Sub
          - arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${EnvironmentName}-${VerticalName}-${Urgency}-urgency-alerts
          - Urgency: !If [EnvIsProd, critical, low]

Outputs:

  ClusterName:
    Description: The name of the cluster.
    Value: !Ref ReplicationGroup

  Host:
    Description: The primary endpoint of the cluster.
    Value: !GetAtt ReplicationGroup.PrimaryEndPoint.Address

  Port:
    Description: The primary port of the cluster.
    Value: !GetAtt ReplicationGroup.PrimaryEndPoint.Port

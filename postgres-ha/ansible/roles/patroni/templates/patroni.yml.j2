scope: {{ patroni_scope }}
namespace: /db/
name: {{ ansible_hostname }}

restapi:
  listen: {{ private_ip }}:8008
  connect_address: {{ private_ip }}:8008

etcd3:
  hosts: {% for host in groups['etcd_nodes'] %}{{ hostvars[host]['private_ip'] }}:2379{% if not loop.last %},{% endif %}{% endfor %}

bootstrap:
  dcs:
    ttl: 30
    loop_wait: 10
    retry_timeout: 60
    maximum_lag_on_failover: 1048576
    postgresql:
      use_pg_rewind: true
      use_slots: true
      parameters:
        wal_level: replica
        hot_standby: "on"
        wal_keep_segments: 8
        max_wal_senders: 10
        max_replication_slots: 10
        wal_log_hints: "on"
        archive_mode: "on"
        archive_timeout: 1800s
        archive_command: mkdir -p ../wal_archive && test ! -f ../wal_archive/%f && cp %p ../wal_archive/%f

  initdb:
  - encoding: UTF8
  - data-checksums

  pg_hba:
  - host replication {{ replication_user }} 127.0.0.1/32 md5
  - host replication {{ replication_user }} {{ ansible_default_ipv4.network }}/24 md5
  - host all all 0.0.0.0/0 md5

  users:
    admin:
      password: admin
      options:
        - createrole
        - createdb

postgresql:
  listen: {{ private_ip }}:5432
  connect_address: {{ private_ip }}:5432
  data_dir: /var/lib/postgresql/{{ postgres_version }}/main
  bin_dir: /usr/lib/postgresql/{{ postgres_version }}/bin
  config_dir: /var/lib/postgresql/{{ postgres_version }}/main
  pgpass: /tmp/pgpass
  authentication:
    replication:
      username: {{ replication_user }}
      password: {{ replication_password }}
    superuser:
      username: postgres
      password: {{ postgres_password }}
    rewind:
      username: {{ replication_user }}
      password: {{ replication_password }}
  parameters:
    unix_socket_directories: '/var/run/postgresql'
    stats_temp_directory: '/var/run/postgresql/{{ postgres_version }}-main.pg_stat_tmp'

tags:
    nofailover: false
    noloadbalance: false
    clonefrom: false
    nosync: false